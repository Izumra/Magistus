package commands

import (
	"bytes"
	"context"
	"log/slog"
	"os"
	"strings"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"

	"github.com/Izumra/Magistus/bot/internal/services/profile"
)

func Start(
	logger *slog.Logger,
	profile *profile.Service,
) bot.HandlerFunc {
	op := "command.Start"
	logger = logger.With(slog.String("handler", op))

	return func(ctx context.Context, b *bot.Bot, update *models.Update) {
		user := update.Message.From

		err := profile.AuthProfile(ctx, user)
		if err != nil {
			return
		}

		photo, err := os.ReadFile("bot/assets/mona_greeting.jpg")
		if err != nil {
			logger.Info("Photo wasn't opened", slog.Any("err", err))
			return
		}

		keyboard := [][]models.InlineKeyboardButton{
			{{Text: "–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É", CallbackData: "createchart"}},
			{{Text: "–ú–æ–∏ –∫–∞—Ä—Ç—ã", CallbackData: "charts"}},
		}
		params := &bot.SendPhotoParams{
			ChatID: update.Message.Chat.ID,
			Photo: &models.InputFileUpload{
				Filename: "mona_greeting.jpg",
				Data:     bytes.NewReader(photo),
			},
			Caption: strings.ReplaceAll(
				`–ü—Ä–∏–≤–µ—Ç!
			–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–æ–Ω–∞ –ú–µ–≥–∏—Å—Ç—É—Å, –Ω–æ –¥—Ä—É–∑—å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫–æ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ –∏–º–µ–Ω–∏.
			–Ø –∞—Å—Ç—Ä–æ–ª–æ–≥ –∏–∑ —Å–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ú–æ–Ω–¥—à—Ç–∞–¥—Ç.
			
			–°—É–¥—å–±–∞ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Å —Ä–æ–∂–¥–µ–Ω–∏—è.üîÆ
			–¢—ã –Ω–µ –ø–æ–≤–µ—Ä–∏—à—å, –Ω–æ üåå –º–æ–≥—É—Ç –º–Ω–æ–≥–æ–µ —Ä–∞—Å—Å–∫–∞—Ç—å –æ —Ç–µ–±–µ –∏ —Ç–≤–æ—ë–º –±—É–¥—É—â–µ–º! 
			–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –æ —Å–µ–±–µ –±–æ–ª—å—à–µ üòΩ`,
				"\t",
				"",
			),
			ParseMode: models.ParseModeHTML,
			ReplyMarkup: models.InlineKeyboardMarkup{
				InlineKeyboard: keyboard,
			},
		}

		_, err = b.SendPhoto(ctx, params)
		if err != nil {
			logger.Info("Message was't sended", slog.Any("err", err))
		}
	}
}
